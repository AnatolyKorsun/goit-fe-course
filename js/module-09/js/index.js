'use strict'

/*
  
  <div class="stopwatch">
    <p class="time js-time">00:00.0</p>
    <button class="btn js-start">Start</button>
    <button class="btn js-take-lap">Lap</button>
    <button class="btn js-reset">Reset</button>
  </div>
  <ul class="laps js-laps"></ul>
  
  –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
  
  - –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É button.js-start, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç –≤—Ä–µ–º—è 
    —Å–æ —Å—Ç–∞—Ä—Ç–∞ –∏ –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏, –æ–±–Ω–æ–≤–ª—è—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–ª–µ–º–µ–Ω—Ç–∞ p.js-time 
    –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x (–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã.—Å–æ—Ç–Ω–∏_–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥).
    
    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ç–∞–∫ –∫–∞–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ—Ç–Ω–∏ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥, –∏–Ω—Ç–µ—Ä–≤–∞–ª
                  –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –Ω–µ —á–∞—â–µ —á–µ–º 1 —Ä–∞–∑ –≤ 100 –º—Å.
    
  - –ö–æ–≥–¥–∞ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –∑–∞–ø—É—â–µ–Ω, —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ button.js-start –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Pause', 
    –∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏ –∫–ª–∏–∫–µ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –æ—Å—Ç–∞–≤–Ω–æ–≤–∫—É —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ –±–µ–∑ —Å–±—Ä–æ—Å–∞ 
    –∑–Ω–∞—á–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏.
    
    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –±—É–ª—å –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–µ–Ω/–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω.
  
  - –ï—Å–ª–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–∞—É–∑—ã, —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ button.js-start
    –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Continue'. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∫–ª–∏–∫–µ –≤ –Ω–µ–µ, —Ç–∞–π–º–µ—Ä –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏, 
    –∫–∞–∫ –±—É–¥—Ç–æ –ø–∞—É–∑—ã –Ω–µ–±—ã–ª–æ, –∞ —Ç–µ–∫—Å—Ç –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 'Pause'. –¢–æ –µ—Å—Ç—å –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –Ω–∞–∂–∞—Ç–∏—è 
    'Pause' –ø—Ä–æ—à–ª–æ 6 —Å–µ–∫—É–Ω–¥ —Å–æ —Å—Ç–∞—Ä—Ç–∞, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ 'Continue' 10 —Å–µ–∫—É–Ω–¥ —Å–ø—É—Å—Ç—è, —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä 
    –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Å 6 —Å–µ–∫—É–Ω–¥ –∏ –¥–∞–ª—å—à–µ, –∞ –Ω–µ —Å 16. 
    
    üîî –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤—Ä–µ–º—è —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–∞—É–∑—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ 
                  –ø—Ä–∏ —Ä–∞—Å—Å—á–µ—Ç–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –æ—Ç–Ω–∏–º–∞—è
                  —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞.
    
  - –ï—Å–ª–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–∞—É–∑—ã, –∫–Ω–æ–ø–∫–∞ 
    button.js-reset –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞ (–Ω–∞ –Ω–µ–µ –º–æ–∂–Ω–æ –∫–ª–∏–∫–Ω—É—Ç—å), –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    disabled. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏ –∫–ª–∏–∫–µ - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –∏ —Å–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    
  - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏ button.js-take-lap –ø—Ä–∏ –∫–ª–∏–∫–µ - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ–∫—É–Ω–¥–æ–º–µ—Ä–∞ 
    –≤ –º–∞—Å—Å–∏–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ ul.js-laps –Ω–æ–≤–æ–≥–æ li —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ xx:xx.x
*/




// ========================================
// –°—á–µ—Ç—á–∏–∫ —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
// ========================================
// const clockface = document.querySelector('.js-clockface');
// const startBtn = document.querySelector('.js-start');
// const stopBtn = document.querySelector('.js-stop');

// class Timer {
//   constructor({
//     startValue = 0,
//     delay = 1000,
//     onTick = val => console.log(val),
//   }) {
//     this.value = startValue;
//     this.timerid = null;
//     this.delay = delay;
//     this.isActive = false;
//     this.onTick = onTick;
//   }

//   start() {
//     if (!this.isActive) {
//       this.isActive = true;

//       this.timerId = setInterval(() => {
//         this.value += 1;
//         this.onTick(this.value);
//       }, this.delay);
//     }
//   }

//   stop() {
//     this.isActive = false;
//     clearInterval(this.timerId);
//     this.timerId = null;
//     this.value = 0;
//     this.onTick(this.value);
//   }
// }

// const timer = new Timer({
//   startValue: 0,
//   delay: 200,
//   onTick: updateClockface,
// });

// startBtn.addEventListener('click', timer.start.bind(timer));
// stopBtn.addEventListener('click', timer.stop.bind(timer));

// function updateClockface(val) {
//   clockface.textContent = val;
// }

// const timer = {
//   value: 0,
//   timerId: null,
//   isActive: false,
//   start(callback) {
//     if (!this.isActive) {
//       this.isActive = true;

//       this.timerId = setInterval(() => {
//         this.value += 1;
//         callback(this.value);
//       }, 500);
//     }
//   },
//   stop(callback) {
//     this.isActive = false;
//     clearInterval(this.timerId);
//     this.timerId = null;
//     this.value = 0;
//     callback(this.value);
//   },
// };

// ========================================
// –†–∞–±–æ—Ç–∞ —Å Date
// ========================================
// const date = new Date(2048, 11, 32, 14, 30, 0, 0);

// console.log(date);

// const date = new Date(1000000000000);

// console.log(date);

// const date = new Date();

// console.log('date: ', date);
// console.log('getDate: ', date.getDate());
// console.log('getMonth(): ', date.getMonth());
// console.log('getTime(): ', date.getTime());

// console.log('getHours(): ', date.getHours());
// console.log('getMinutes(): ', date.getMinutes());
// console.log('getSeconds(): ', date.getSeconds());
// console.log('getMilliseconds(): ', date.getMilliseconds());

// ========================================
// –¢–∞–π–º–µ—Ä-–º–∞–∫–∞—Ä–æ–Ω—ã
// ========================================

// const counter = 0;
// let startTime = Date.now();
// let deltaTime = 0;
// const clockface = document.querySelector('.js-clockface');

// let minutes;
// let seconds;
// let milliseconds;

// setInterval(() => {
//   const currentTime = Date.now();

//   deltaTime = currentTime - startTime;

//   const time = new Date(deltaTime);

//   minutes = time.getMinutes();
//   seconds = time.getSeconds();
//   milliseconds = Number.parseInt(time.getMilliseconds() / 100);

//   clockface.textContent = `${minutes}:${seconds}:${milliseconds}`;
//   // const time = new Date(deltaTime);

//   // console.log('seconds: ', time.getSeconds());

//   // console.log('deltaTime: ', deltaTime);
// }, 100);

// ========================================
// –¢–∞–π–º–µ—Ä —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å
// ========================================

const clockface = document.querySelector('.js-clockface');
const startBtn = document.querySelector('.js-start');
const stopBtn = document.querySelector('.js-stop');

class Timer {
  constructor({ onTick }) {
    this.startTime = null;
    this.deltaTime = null;
    this.timerId = null;
    this.isActive = false;
    this.onTick = onTick;
  }

  start() {
    if (!this.isActive) {
      this.isActive = true;
      this.startTime = Date.now();

      this.timerId = setInterval(() => {
        const currentTime = Date.now();

        this.deltaTime = currentTime - this.startTime;

        // –¢–∞–∫–æ–π —Å–µ–±–µ –º–µ—Ç–æ–¥ —Ä–∞—Å—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
        // –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∫–∞–∫ –±–µ–∑ –º–µ—Ç–æ–¥–æ–≤ –æ–±—å–µ–∫—Ç–∞ Date
        // –ø—Ä–æ—Å—Ç–æ –¥–µ–ª–∏—Ç–µ –Ω–∞ 1000 –¥–ª—è —Å–µ–∫—É–Ω–¥ –∏—Ç–¥
        const time = new Date(this.deltaTime);
        const min = time.getMinutes();
        const sec = time.getSeconds();
        const ms = Number.parseInt(time.getMilliseconds() / 100);

        console.log('–¢–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑ –≤ 100–º—Å');
        this.onTick({ min, sec, ms });
      }, 100);
    }
  }

  stop() {
    this.isActive = false;
    clearInterval(this.timerId);
    this.timerId = null;
    this.startTime = null;
    this.deltaTime = 0;

    this.onTick({ min: 0, sec: 0, ms: 0 });
  }
}

const timer = new Timer({
  onTick: updateClockface,
});

startBtn.addEventListener('click', timer.start.bind(timer));
stopBtn.addEventListener('click', timer.stop.bind(timer));

updateClockface({ min: 0, sec: 0, ms: 0 });

function updateClockface({ min, sec, ms }) {
 let minute = min < 10 ? `0${min}`: `${min}`;
 let second = sec < 10 ? `0${sec}`: `${sec}`;
 clockface.textContent = `${minute}:${second}.${ms}`;
}